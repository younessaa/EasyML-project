import React, { useState, useEffect } from 'react'
import { useDispatch , useSelector} from 'react-redux';




import { CircularProgress } from "@material-ui/core";
import Footer from "../components/Footer/Footer";
import HeaderLite from '../components/HeaderLite/HeaderLite';
import ImageHeaderLite from '../components/ImageHeaderLite/ImageHeaderLite';
import ExploitableCard from '../components/exploitableCard/exploitableCard';
import { getExploitables } from '../actions/exploitables';
import imag from '../assets/images/bg-exploitables.svg'
import styles from '../assets/styles/showExploitable.module.css';
import { useNavigate } from 'react-router-dom';

function ShowExploitable () {
    const [user , setUser] = useState(JSON.parse(localStorage.getItem('profile')))
    const [searchData , setSearchData] = useState('');
    const navigate = useNavigate();

    const dispatch = useDispatch();
    useEffect(() => {
        dispatch(getExploitables());
    }, [dispatch]);
    const exploitables = useSelector((state) => (state.exploitables));

    const submit = () => {
        
        navigate(`/Exploite/${searchData}`);
    }

    const handleChange = (e) => {
        setSearchData(e.target.value);
    }
    
    return (
        <>
        <div>
            <HeaderLite />
            <ImageHeaderLite image={imag} title="My exploitables"/>
            <div >
                <div className='container-md'>
                    <div className={styles.formSearch + " input-group mb-5"}>
                        <input onChange={handleChange} name="search"  type="search" className="form-control rounded mt-0" placeholder="Use a shared user tocken" aria-label="Search" aria-describedby="search-addon" />
                        <button onClick={() => submit()}  type="button" className="btn btn-outline-secondary m-0">Go To</button>
                    </div>
                { (user!== undefined || user!==null)?
                (user.result!== undefined && user.result!== null) ?
                (!exploitables.length ? 
                 
                <div className="justify-content-center"><CircularProgress /></div> :
                                    exploitables.filter(exploitable => exploitable.idUser === user.result._id).map(
                                        (exploitable) => (
                                                <ExploitableCard exploitable={exploitable}/>
                                        )
                                    ))
                                    : null
                :null


            }
                </div>
            
            </div>
            
        </div>
        <Footer />
        </>
      
    )
  

};
export default ShowExploitable;